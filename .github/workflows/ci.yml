---
name: CI

on:
  push:
    branches:
      - '**'
    paths:
      - 'Dockerfile'   # only run when this file changes
      - '.github/workflows/ci.yml'
jobs:
  ci-docker:
    permissions:
      contents: write
      packages: write
      pull-requests: write
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@09d2acae674a48949e3602304ab46fd20ae0c42f
      - name: install prereqs
        run: |
          sudo apt-get update -y && \
          sudo apt-get upgrade -y && \
          sudo apt-get install build-essentials docker.io

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Pull existing image (if any)
        run: |
          docker pull ghcr.io/${{ github.repository_owner }}/builder:${{ github.ref_name }} || true

      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: ghcr.io/${{ github.repository_owner }}/builder:${{ github.ref_name }}

  ci-pipeline:
    permissions:
      contents: read
      pull-requests: write
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@09d2acae674a48949e3602304ab46fd20ae0c42f
      - name: Install dependencies
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          export DEBIAN_FRONTEND=noninteractive
          echo "USER: $(whoami), SHELL: ${SHELL}"
          sudo add-apt-repository ppa:ubuntu-toolchain-r/test
          sudo apt-get update -y
          sudo apt-get install -y build-essential cmake ccache clang libc++-dev libc++abi-dev make cppcheck nodejs \
                                  npm yamllint cppcheck
          npm install -g markdownlint-cli
          command -v markdownlint || exit 1
      - name: Configure
        run: make clean configure
      - name: Lint
        run: make lint
#      - name: Build
#        run: make build
#      - name: Test
#        run: make test
